// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegBriefPublisher.Database;

#nullable disable

namespace RegBriefPublisher.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230529210441_init 4")]
    partial class init4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RegBriefPublisher.Models.Brief", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PubDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Briefs");
                });

            modelBuilder.Entity("RegBriefPublisher.Models.BriefCountryMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BriefId")
                        .HasColumnType("int");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BriefId");

                    b.ToTable("BriefCountryMaps");
                });

            modelBuilder.Entity("RegBriefPublisher.Models.TAXBrief", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BriefCountryMapId")
                        .HasColumnType("int");

                    b.Property<string>("LongStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BriefCountryMapId");

                    b.ToTable("TAXBriefs");
                });

            modelBuilder.Entity("RegBriefPublisher.Models.TPABrief", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BriefCountryMapId")
                        .HasColumnType("int");

                    b.Property<string>("LongStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BriefCountryMapId");

                    b.ToTable("TPABriefs");
                });

            modelBuilder.Entity("RegBriefPublisher.Models.WTABrief", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BriefCountryMapId")
                        .HasColumnType("int");

                    b.Property<string>("LongStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BriefCountryMapId");

                    b.ToTable("WTABriefs");
                });

            modelBuilder.Entity("RegBriefPublisher.Models.BriefCountryMap", b =>
                {
                    b.HasOne("RegBriefPublisher.Models.Brief", "Brief")
                        .WithMany("briefCountryMaps")
                        .HasForeignKey("BriefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brief");
                });

            modelBuilder.Entity("RegBriefPublisher.Models.TAXBrief", b =>
                {
                    b.HasOne("RegBriefPublisher.Models.BriefCountryMap", null)
                        .WithMany("tAXBriefs")
                        .HasForeignKey("BriefCountryMapId");
                });

            modelBuilder.Entity("RegBriefPublisher.Models.TPABrief", b =>
                {
                    b.HasOne("RegBriefPublisher.Models.BriefCountryMap", "BriefCountryMap")
                        .WithMany("tPABriefs")
                        .HasForeignKey("BriefCountryMapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BriefCountryMap");
                });

            modelBuilder.Entity("RegBriefPublisher.Models.WTABrief", b =>
                {
                    b.HasOne("RegBriefPublisher.Models.BriefCountryMap", "BriefCountryMap")
                        .WithMany("wTABriefs")
                        .HasForeignKey("BriefCountryMapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BriefCountryMap");
                });

            modelBuilder.Entity("RegBriefPublisher.Models.Brief", b =>
                {
                    b.Navigation("briefCountryMaps");
                });

            modelBuilder.Entity("RegBriefPublisher.Models.BriefCountryMap", b =>
                {
                    b.Navigation("tAXBriefs");

                    b.Navigation("tPABriefs");

                    b.Navigation("wTABriefs");
                });
#pragma warning restore 612, 618
        }
    }
}
